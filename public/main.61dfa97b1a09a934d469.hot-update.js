/*! For license information please see main.61dfa97b1a09a934d469.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateprada("main",{"./styles/index.scss":(t,e,s)=>{s.r(e);var i=s("./node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js")(t.id,{publicPath:"",locals:!1});t.hot.dispose(i),t.hot.accept(void 0,i)},"./app/components/Canvas/index.js":(t,e,s)=>{s.r(e),s.d(e,{default:()=>r});var i=s("./node_modules/ogl/src/core/Renderer.js"),o=s("./node_modules/ogl/src/core/Camera.js"),h=s("./node_modules/ogl/src/core/Transform.js"),n=s("./app/components/Canvas/Home/index.js"),c=s("./app/components/Canvas/About/index.js"),l=s("./app/components/Canvas/Collections/index.js"),a=s("./app/components/Canvas/transition.js"),d=s("./app/components/Canvas/Detail/index.js");class r{constructor({template:t}){this.template=t,this.createRenderer(),this.createCamera(),this.createScene(),this.onResize(),this.x={start:0,distance:0,end:0},this.y={start:0,distance:0,end:0}}createRenderer(){this.renderer=new i.Renderer({alpha:!0,antiAliasing:!0}),this.gl=this.renderer.gl,document.body.appendChild(this.gl.canvas)}createCamera(){this.camera=new o.Camera(this.gl),this.camera.position.z=5}createScene(){this.scene=new h.Transform}createHome(){this.home=new n.default({gl:this.gl,scene:this.scene,sizes:this.sizes})}destroyHome(){this.home&&(this.home.destroy(),this.home=null,console.log("destroy home!"))}createAbout(){this.about=new c.default({gl:this.gl,scene:this.scene,sizes:this.sizes})}destroyAbout(){this.about&&(this.about.destroy(),this.about=null,console.log("destroy about!"))}createCollections(){this.collections=new l.default({gl:this.gl,scene:this.scene,sizes:this.sizes})}destroyCollections(){this.collections&&(this.collections.destroy(),this.collections=null)}createDetail(){this.detail=new d.default({gl:this.gl,scene:this.scene,sizes:this.sizes,transition:this.transition})}destroyDetail(){this.detail&&(this.detail.destroy(),this.detail=null)}onPreloaded(){this.onPageChangeEnd(this.template)}onPageChangeStart(t,e){this.collections&&this.collections.hide(),this.about&&this.about.hide(),this.home&&this.home.hide(),this.detail&&this.detail.hide(),this.fromCollectionsToDetail="collections"===this.template&&e.indexOf("detail")>-1,this.fromDetailToCollections="detail"===this.template&&e.indexOf("collections")>-1,(this.fromCollectionsToDetail||this.fromDetailToCollections)&&(this.transition=new a.default({collections:this.collections,url:e,gl:this.gl,scene:this.scene,sizes:this.sizes}),this.transition)}onPageChangeEnd(t){"collections"===t?this.createCollections():this.collections&&this.destroyCollections(),"Detail"===t?this.createDetail():this.detail&&this.destroyDetail(),"about"===t?this.createAbout():this.about&&this.destroyAbout(),"home"===t?this.createHome():this.home&&this.destroyHome()}onResize(){this.renderer.setSize(window.innerWidth,window.innerHeight),this.camera.perspective({aspect:window.innerWidth/window.innerHeight});const t=this.camera.fov*(Math.PI/180),e=2*Math.tan(t/2)*this.camera.position.z,s=e*this.camera.aspect;this.sizes={height:e,width:s};const i={sizes:this.sizes};this.collections&&this.collections.onResize(i),this.detail&&this.detail.onResize(i),this.about&&this.about.onResize(i),this.home&&this.home.onResize(i)}onTouchDown(t){this.isDown=!0,this.x.start=t.touches?t.touches[0].clientX:t.clientX,this.y.start=t.touches?t.touches[0].clientY:t.clientY;const e={x:this.x,y:this.y};this.collections&&this.collections.onTouchDown&&this.collections.onTouchDown(e),this.detail&&this.detail.onTouchDown&&this.detail.onTouchDown(e),this.about&&this.about.onTouchDown&&this.about.onTouchDown(e),this.home&&this.home.onTouchDown&&this.home.onTouchDown(e)}onTouchMove(t){if(!this.isDown)return;const e=t.touches?t.touches[0].clientX:t.clientX,s=t.touches?t.touches[0].clientY:t.clientY;this.x.end=e,this.y.end=s;const i={x:this.x,y:this.y};this.collections&&this.collections.onTouchMove&&this.collections.onTouchMove(i),this.detail&&this.detail.onTouchMove&&this.detail.onTouchMove(i),this.about&&this.about.onTouchMove&&this.about.onTouchMove(i),this.home&&this.home.onTouchMove&&this.home.onTouchMove(i)}onTouchUp(t){this.isDown=!1;const e=t.touches?t.touches[0].clientX:t.clientX,s=t.touches?t.touches[0].clientY:t.clientY;this.x.end=e,this.y.end=s;const i={x:this.x,y:this.y};this.collections&&this.collections.onTouchUp&&this.collections.onTouchUp(i),this.detail&&this.detail.onTouchUp&&this.detail.onTouchUp(i),this.about&&this.about.onTouchUp&&this.about.onTouchUp(i),this.home&&this.home.onTouchUp&&this.home.onTouchUp(i)}onWheel(t){this.collections&&this.collections.onWheel(t),this.home&&this.home.onWheel(t)}update(t){this.collections&&this.collections.update(t),this.detail&&this.detail.update(t),this.about&&this.about.update(t),this.home&&this.home.update(),this.renderer.render({camera:this.camera,scene:this.scene})}}}},(function(t){t.h=()=>"8c02ab5ecf4482edea26"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,