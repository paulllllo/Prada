/*! For license information please see main.62b3cf87b1b8d314e6bd.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateprada("main",{"./styles/index.scss":(e,s,t)=>{t.r(s);var o=t("./node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js")(e.id,{publicPath:"",locals:!1});e.hot.dispose(o),e.hot.accept(void 0,o)},"./app/components/Canvas/About/index.js":(e,s,t)=>{t.r(s),t.d(s,{default:()=>r});var o=t("./node_modules/ogl/src/core/Transform.js"),i=t("./node_modules/ogl/src/extras/Plane.js"),l=t("./app/components/Canvas/About/Gallery.js"),a=t("./node_modules/lodash/lodash.js");class r{constructor({gl:e,scene:s,sizes:t}){this.gl=e,this.scene=s,this.sizes=t,this.group=new o.Transform,this.createGeometry(),this.createGalleries(),this.group.setParent(this.scene),this.show()}createGeometry(){this.geometry=new i.Plane(this.gl)}createGalleries(){this.galleriesElements=document.querySelectorAll(".about_gallery"),this.galleries=(0,a.map)(this.galleriesElements,((e,s)=>new l.default({element:e,geometry:this.geometry,gl:this.gl,scene:this.group,sizes:this.sizes,index:s})))}show(){(0,a.map)(this.galleries,(e=>{e.show()}))}hide(){(0,a.map)(this.galleries,(e=>{e.hide()}))}onResize(e){(0,a.map)(this.galleries,(s=>s.onResize(e)))}onTouchDown(e){(0,a.map)(this.galleries,(s=>s.onTouchDown(e)))}onTouchMove(e){(0,a.map)(this.galleries,(s=>s.onTouchMove(e)))}onTouchUp(e){(0,a.map)(this.galleries,(s=>s.onTouchUp(e)))}onWheel({pixelX:e,pixelY:s}){}update(e){(0,a.map)(this.galleries,(s=>{s.update(e)}))}destroy(){this.scene.removeChild(this.group)}}}},(function(e){e.h=()=>"66ecb1ce05da3a9d5a1a"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi42MmIzY2Y4N2IxYjhkMzE0ZTZiZC5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7dUZBSU0sSUFBSUEsRUFBWSxFQUFRLDBFQUFSLENBQW9GQyxFQUFPQyxHQUFJLENBQUMsV0FBYSxHQUFHLFFBQVMsSUFDeklELEVBQU9FLElBQUlDLFFBQVFKLEdBQ25CQyxFQUFPRSxJQUFJRSxZQUFPQyxFQUFXTiw4UUNGcEIsTUFBTU8sRUFDakJDLFdBQUFBLEVBQWEsR0FBRUMsRUFBRSxNQUFFQyxFQUFLLE1BQUVDLElBQ3RCQyxLQUFLSCxHQUFLQSxFQUNWRyxLQUFLRixNQUFRQSxFQUNiRSxLQUFLRCxNQUFRQSxFQUViQyxLQUFLQyxNQUFRLElBQUlDLEVBQUFBLFVBRWpCRixLQUFLRyxpQkFDTEgsS0FBS0ksa0JBSUxKLEtBQUtDLE1BQU1JLFVBQVVMLEtBQUtGLE9BQzFCRSxLQUFLTSxNQUNULENBRUFILGNBQUFBLEdBQ0lILEtBQUtPLFNBQVcsSUFBSUMsRUFBQUEsTUFBTVIsS0FBS0gsR0FDbkMsQ0FFQU8sZUFBQUEsR0FDSUosS0FBS1Msa0JBQW9CQyxTQUFTQyxpQkFBaUIsa0JBRW5EWCxLQUFLWSxXQUFZQyxFQUFBQSxFQUFBQSxLQUFJYixLQUFLUyxtQkFBbUIsQ0FBQ0ssRUFBU0MsSUFDNUMsSUFBSUMsRUFBQUEsUUFBUSxDQUNmRixVQUNBUCxTQUFVUCxLQUFLTyxTQUNmVixHQUFJRyxLQUFLSCxHQUNUQyxNQUFPRSxLQUFLQyxNQUNaRixNQUFPQyxLQUFLRCxNQUNaZ0IsV0FHWixDQUdBVCxJQUFBQSxJQUNJTyxFQUFBQSxFQUFBQSxLQUFJYixLQUFLWSxXQUFZSyxJQUNqQkEsRUFBUVgsTUFBTSxHQUV0QixDQUVBWSxJQUFBQSxJQUNJTCxFQUFBQSxFQUFBQSxLQUFJYixLQUFLWSxXQUFZSyxJQUNqQkEsRUFBUUMsTUFBTSxHQUV0QixDQUlBQyxRQUFBQSxDQUFVQyxJQUNOUCxFQUFBQSxFQUFBQSxLQUFJYixLQUFLWSxXQUFXSyxHQUFXQSxFQUFRRSxTQUFTQyxJQUNwRCxDQUVBQyxXQUFBQSxDQUFhRCxJQUNUUCxFQUFBQSxFQUFBQSxLQUFJYixLQUFLWSxXQUFXSyxHQUFXQSxFQUFRSSxZQUFZRCxJQUN2RCxDQUVBRSxXQUFBQSxDQUFhRixJQUNUUCxFQUFBQSxFQUFBQSxLQUFJYixLQUFLWSxXQUFXSyxHQUFXQSxFQUFRSyxZQUFZRixJQUN2RCxDQUVBRyxTQUFBQSxDQUFXSCxJQUNQUCxFQUFBQSxFQUFBQSxLQUFJYixLQUFLWSxXQUFXSyxHQUFXQSxFQUFRTSxVQUFVSCxJQUNyRCxDQUVBSSxPQUFBQSxFQUFTLE9BQUVDLEVBQU0sT0FBRUMsSUFDbkIsQ0FHQUMsTUFBQUEsQ0FBUUMsSUFDSmYsRUFBQUEsRUFBQUEsS0FBSWIsS0FBS1ksV0FBV0ssSUFDaEJBLEVBQVFVLE9BQU9DLEVBQU8sR0FFOUIsQ0FHQUMsT0FBQUEsR0FDSTdCLEtBQUtGLE1BQU1nQyxZQUFZOUIsS0FBS0MsTUFDaEMsa0JDcEZKOEIsRUFBb0JDLEVBQUksSUFBTSIsInNvdXJjZXMiOlsid2VicGFjazovL3ByYWRhLy4vc3R5bGVzL2luZGV4LnNjc3M/ZjBmZiIsIndlYnBhY2s6Ly9wcmFkYS8uL2FwcC9jb21wb25lbnRzL0NhbnZhcy9BYm91dC9pbmRleC5qcyIsIndlYnBhY2s6Ly9wcmFkYS93ZWJwYWNrL3J1bnRpbWUvZ2V0RnVsbEhhc2giXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTcyMzcxNzcwMzMxN1xuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCIuLi9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9obXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJwdWJsaWNQYXRoXCI6XCJcIixcImxvY2Fsc1wiOmZhbHNlfSk7XG4gICAgICBtb2R1bGUuaG90LmRpc3Bvc2UoY3NzUmVsb2FkKTtcbiAgICAgIG1vZHVsZS5ob3QuYWNjZXB0KHVuZGVmaW5lZCwgY3NzUmVsb2FkKTtcbiAgICB9XG4gICIsImltcG9ydCB7IFBsYW5lLCBUcmFuc2Zvcm0gfSBmcm9tICdvZ2wnXG5pbXBvcnQgR2FsbGVyeSBmcm9tICcuL0dhbGxlcnkuanMnXG5pbXBvcnQgeyBtYXAgfSBmcm9tICdsb2Rhc2gnXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEhvbWUge1xuICAgIGNvbnN0cnVjdG9yICh7IGdsLCBzY2VuZSwgc2l6ZXMgfSkge1xuICAgICAgICB0aGlzLmdsID0gZ2xcbiAgICAgICAgdGhpcy5zY2VuZSA9IHNjZW5lXG4gICAgICAgIHRoaXMuc2l6ZXMgPSBzaXplc1xuXG4gICAgICAgIHRoaXMuZ3JvdXAgPSBuZXcgVHJhbnNmb3JtKClcblxuICAgICAgICB0aGlzLmNyZWF0ZUdlb21ldHJ5KClcbiAgICAgICAgdGhpcy5jcmVhdGVHYWxsZXJpZXMoKVxuXG4gICAgICAgIFxuXG4gICAgICAgIHRoaXMuZ3JvdXAuc2V0UGFyZW50KHRoaXMuc2NlbmUpXG4gICAgICAgIHRoaXMuc2hvdygpXG4gICAgfVxuXG4gICAgY3JlYXRlR2VvbWV0cnkgKCkge1xuICAgICAgICB0aGlzLmdlb21ldHJ5ID0gbmV3IFBsYW5lKHRoaXMuZ2wpXG4gICAgfVxuXG4gICAgY3JlYXRlR2FsbGVyaWVzICgpIHtcbiAgICAgICAgdGhpcy5nYWxsZXJpZXNFbGVtZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5hYm91dF9nYWxsZXJ5JylcblxuICAgICAgICB0aGlzLmdhbGxlcmllcyA9IG1hcCh0aGlzLmdhbGxlcmllc0VsZW1lbnRzLCAoZWxlbWVudCwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgR2FsbGVyeSh7XG4gICAgICAgICAgICAgICAgZWxlbWVudCxcbiAgICAgICAgICAgICAgICBnZW9tZXRyeTogdGhpcy5nZW9tZXRyeSxcbiAgICAgICAgICAgICAgICBnbDogdGhpcy5nbCxcbiAgICAgICAgICAgICAgICBzY2VuZTogdGhpcy5ncm91cCxcbiAgICAgICAgICAgICAgICBzaXplczogdGhpcy5zaXplcyxcbiAgICAgICAgICAgICAgICBpbmRleFxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICAvLyAgICAgICAgICBTaG93XG4gICAgc2hvdyAoKSB7XG4gICAgICAgIG1hcCh0aGlzLmdhbGxlcmllcywgKGdhbGxlcnkpID0+IHtcbiAgICAgICAgICAgIGdhbGxlcnkuc2hvdygpXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgaGlkZSAoKSB7XG4gICAgICAgIG1hcCh0aGlzLmdhbGxlcmllcywgKGdhbGxlcnkpID0+IHtcbiAgICAgICAgICAgIGdhbGxlcnkuaGlkZSgpXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgLy8gICAgICAgICAgICAgICAgICAgRXZlbnRzXG5cbiAgICBvblJlc2l6ZSAoZXZlbnQpIHtcbiAgICAgICAgbWFwKHRoaXMuZ2FsbGVyaWVzLCBnYWxsZXJ5ID0+IGdhbGxlcnkub25SZXNpemUoZXZlbnQpKVxuICAgIH1cblxuICAgIG9uVG91Y2hEb3duIChldmVudCkge1xuICAgICAgICBtYXAodGhpcy5nYWxsZXJpZXMsIGdhbGxlcnkgPT4gZ2FsbGVyeS5vblRvdWNoRG93bihldmVudCkpXG4gICAgfVxuXG4gICAgb25Ub3VjaE1vdmUgKGV2ZW50KSB7XG4gICAgICAgIG1hcCh0aGlzLmdhbGxlcmllcywgZ2FsbGVyeSA9PiBnYWxsZXJ5Lm9uVG91Y2hNb3ZlKGV2ZW50KSlcbiAgICB9XG5cbiAgICBvblRvdWNoVXAgKGV2ZW50KSB7XG4gICAgICAgIG1hcCh0aGlzLmdhbGxlcmllcywgZ2FsbGVyeSA9PiBnYWxsZXJ5Lm9uVG91Y2hVcChldmVudCkpXG4gICAgfVxuXG4gICAgb25XaGVlbCAoeyBwaXhlbFgsIHBpeGVsWSB9KSB7XG4gICAgfVxuXG4gICAgLy8gICAgICAgICAgTG9vcFxuICAgIHVwZGF0ZSAoc2Nyb2xsKSB7XG4gICAgICAgIG1hcCh0aGlzLmdhbGxlcmllcywgZ2FsbGVyeSA9PiB7XG4gICAgICAgICAgICBnYWxsZXJ5LnVwZGF0ZShzY3JvbGwpXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgLy8gICAgICAgICAgRGVzdHJveVxuICAgIGRlc3Ryb3kgKCkge1xuICAgICAgICB0aGlzLnNjZW5lLnJlbW92ZUNoaWxkKHRoaXMuZ3JvdXApXG4gICAgfVxufVxuIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5oID0gKCkgPT4gKFwiNjZlY2IxY2UwNWRhM2E5ZDVhMWFcIikiXSwibmFtZXMiOlsiY3NzUmVsb2FkIiwibW9kdWxlIiwiaWQiLCJob3QiLCJkaXNwb3NlIiwiYWNjZXB0IiwidW5kZWZpbmVkIiwiSG9tZSIsImNvbnN0cnVjdG9yIiwiZ2wiLCJzY2VuZSIsInNpemVzIiwidGhpcyIsImdyb3VwIiwiVHJhbnNmb3JtIiwiY3JlYXRlR2VvbWV0cnkiLCJjcmVhdGVHYWxsZXJpZXMiLCJzZXRQYXJlbnQiLCJzaG93IiwiZ2VvbWV0cnkiLCJQbGFuZSIsImdhbGxlcmllc0VsZW1lbnRzIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZ2FsbGVyaWVzIiwibWFwIiwiZWxlbWVudCIsImluZGV4IiwiR2FsbGVyeSIsImdhbGxlcnkiLCJoaWRlIiwib25SZXNpemUiLCJldmVudCIsIm9uVG91Y2hEb3duIiwib25Ub3VjaE1vdmUiLCJvblRvdWNoVXAiLCJvbldoZWVsIiwicGl4ZWxYIiwicGl4ZWxZIiwidXBkYXRlIiwic2Nyb2xsIiwiZGVzdHJveSIsInJlbW92ZUNoaWxkIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImgiXSwic291cmNlUm9vdCI6IiJ9