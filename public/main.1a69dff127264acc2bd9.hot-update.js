/*! For license information please see main.1a69dff127264acc2bd9.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateprada("main",{"./styles/index.scss":(t,e,s)=>{s.r(e);var i=s("./node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js")(t.id,{publicPath:"",locals:!1});t.hot.dispose(i),t.hot.accept(void 0,i)},"./app/components/Canvas/index.js":(t,e,s)=>{s.r(e),s.d(e,{default:()=>d});var i=s("./node_modules/ogl/src/core/Renderer.js"),o=s("./node_modules/ogl/src/core/Camera.js"),h=s("./node_modules/ogl/src/core/Transform.js"),n=s("./app/components/Canvas/Home/index.js"),c=s("./app/components/Canvas/About/index.js"),a=s("./app/components/Canvas/Collections/index.js"),l=s("./app/components/Canvas/transition.js"),r=s("./app/components/Canvas/Detail/index.js");class d{constructor({template:t}){this.template=t,this.createRenderer(),this.createCamera(),this.createScene(),this.onResize(),this.x={start:0,distance:0,end:0},this.y={start:0,distance:0,end:0}}createRenderer(){this.renderer=new i.Renderer({alpha:!0,antiAliasing:!0}),this.gl=this.renderer.gl,document.body.appendChild(this.gl.canvas)}createCamera(){this.camera=new o.Camera(this.gl),this.camera.position.z=5}createScene(){this.scene=new h.Transform}createHome(){this.home=new n.default({gl:this.gl,scene:this.scene,sizes:this.sizes})}destroyHome(){this.home&&(this.home.destroy(),this.home=null,console.log("destroy home!"))}createAbout(){this.about=new c.default({gl:this.gl,scene:this.scene,sizes:this.sizes})}destroyAbout(){this.about&&(this.about.destroy(),this.about=null,console.log("destroy about!"))}createCollections(){this.collections=new a.default({gl:this.gl,scene:this.scene,sizes:this.sizes})}destroyCollections(){this.collections&&(this.collections.destroy(),this.collections=null)}createDetail(){this.detail=new r.default({gl:this.gl,scene:this.scene,sizes:this.sizes,transition:this.transition})}destroyDetail(){this.detail&&(this.detail.destroy(),this.detail=null)}onPreloaded(){this.onPageChangeEnd(this.template)}onPageChangeStart(t,e){this.collections&&this.collections.hide(),this.about&&this.about.hide(),this.home&&this.home.hide(),this.detail&&this.detail.hide(),this.fromCollectionsToDetail="collections"===this.template&&e.indexOf("detail")>-1,this.fromDetailToCollections="detail"===this.template&&e.indexOf("collections")>-1,(this.fromCollectionsToDetail||this.fromDetailToCollections)&&(this.transition=new l.default({collections:this.collections,url:e,gl:this.gl,scene:this.scene,sizes:this.sizes}),this.transition.setElement(this.collections||this.detail))}onPageChangeEnd(t){"collections"===t?this.createCollections():this.collections&&this.destroyCollections(),"Detail"===t?this.createDetail():this.detail&&this.destroyDetail(),"about"===t?this.createAbout():this.about&&this.destroyAbout(),"home"===t?this.createHome():this.home&&this.destroyHome()}onResize(){this.renderer.setSize(window.innerWidth,window.innerHeight),this.camera.perspective({aspect:window.innerWidth/window.innerHeight});const t=this.camera.fov*(Math.PI/180),e=2*Math.tan(t/2)*this.camera.position.z,s=e*this.camera.aspect;this.sizes={height:e,width:s};const i={sizes:this.sizes};this.collections&&this.collections.onResize(i),this.detail&&this.detail.onResize(i),this.about&&this.about.onResize(i),this.home&&this.home.onResize(i)}onTouchDown(t){this.isDown=!0,this.x.start=t.touches?t.touches[0].clientX:t.clientX,this.y.start=t.touches?t.touches[0].clientY:t.clientY;const e={x:this.x,y:this.y};this.collections&&this.collections.onTouchDown&&this.collections.onTouchDown(e),this.detail&&this.detail.onTouchDown&&this.detail.onTouchDown(e),this.about&&this.about.onTouchDown&&this.about.onTouchDown(e),this.home&&this.home.onTouchDown&&this.home.onTouchDown(e)}onTouchMove(t){if(!this.isDown)return;const e=t.touches?t.touches[0].clientX:t.clientX,s=t.touches?t.touches[0].clientY:t.clientY;this.x.end=e,this.y.end=s;const i={x:this.x,y:this.y};this.collections&&this.collections.onTouchMove&&this.collections.onTouchMove(i),this.detail&&this.detail.onTouchMove&&this.detail.onTouchMove(i),this.about&&this.about.onTouchMove&&this.about.onTouchMove(i),this.home&&this.home.onTouchMove&&this.home.onTouchMove(i)}onTouchUp(t){this.isDown=!1;const e=t.touches?t.touches[0].clientX:t.clientX,s=t.touches?t.touches[0].clientY:t.clientY;this.x.end=e,this.y.end=s;const i={x:this.x,y:this.y};this.collections&&this.collections.onTouchUp&&this.collections.onTouchUp(i),this.detail&&this.detail.onTouchUp&&this.detail.onTouchUp(i),this.about&&this.about.onTouchUp&&this.about.onTouchUp(i),this.home&&this.home.onTouchUp&&this.home.onTouchUp(i)}onWheel(t){this.collections&&this.collections.onWheel(t),this.home&&this.home.onWheel(t)}update(t){this.collections&&this.collections.update(t),this.detail&&this.detail.update(t),this.about&&this.about.update(t),this.home&&this.home.update(),this.renderer.render({camera:this.camera,scene:this.scene})}}},"./app/components/Canvas/transition.js":(t,e,s)=>{s.r(e),s.d(e,{default:()=>a});var i=s("./node_modules/ogl/src/extras/Plane.js"),o=s("./node_modules/ogl/src/core/Program.js"),h=s("./node_modules/ogl/src/core/Mesh.js"),n=s("./app/shaders/plane-vertex.glsl"),c=s("./app/shaders/plane-fragment.glsl");const a=class{constructor({collections:t,gl:e,scene:s,sizes:o,url:h}){this.collections=t,this.gl=e,this.url=h,this.scene=s,this.sizes=o,this.geometry=new i.Plane(this.gl),this.extra={x:0,y:0}}createProgram(t){this.program=new o.Program(this.gl,{fragment:c.default,vertex:n.default,uniforms:{uAlpha:{value:1},tMap:{value:t}}})}createMesh(t){this.mesh=new h.Mesh(this.gl,{geometry:this.geometry,program:this.program}),this.mesh.scale.x=t.scale.x,this.mesh.scale.y=t.scale.y,this.mesh.scale.z=t.scale.z,this.mesh.position.x=t.position.x,this.mesh.position.y=t.position.y,this.mesh.position.z=.01*t.position.z,this.mesh.setParent(this.scene)}setElement(t){if(console.log("element"),"collections"===t.id){const[e,s]=t,i=s[e];this.createProgram(i.texture),this.createMesh(i.mesh),this.transition="detail"}else this.createProgram(t.texture),this.createMesh(t),this.transition="collections"}animate(){console.log("animate")}}}},(function(t){t.h=()=>"5cda726aba3888aebcab"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,