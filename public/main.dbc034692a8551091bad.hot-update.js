/*! For license information please see main.dbc034692a8551091bad.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateprada("main",{"./styles/index.scss":(s,t,e)=>{e.r(t);var i=e("./node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js")(s.id,{publicPath:"",locals:!1});s.hot.dispose(i),s.hot.accept(void 0,i)},"./app/components/Canvas/Detail/index.js":(s,t,e)=>{e.r(t),e.d(t,{default:()=>r});var i=e("./node_modules/ogl/src/extras/Plane.js"),h=e("./node_modules/ogl/src/core/Program.js"),a=e("./node_modules/ogl/src/core/Mesh.js"),o=e("./app/shaders/collections-vertex.glsl"),n=e("./app/shaders/collections-fragment.glsl");const r=class{constructor({gl:s,scene:t,sizes:e,transition:h}){this.id="detail",this.element=document.querySelector(".detail_media_image"),this.gl=s,this.scene=t,this.sizes=e,this.transition=h,this.geometry=new i.Plane(this.gl),this.createTexture(),this.createProgram(),this.createMesh(),this.createBounds({sizes:this}),this.onResize(this.sizes),this.show()}createTexture(){const s=this.element.getAttribute("data-src");this.texture=window.TEXTURES[s]}createProgram(){this.program=new h.Program(this.gl,{fragment:n.default,vertex:o.default,uniforms:{uAlpha:{value:0},tMap:{value:this.texture}}})}createMesh(){this.mesh=new a.Mesh(this.gl,{geometry:this.geometry,program:this.program}),this.mesh.setParent(this.scene)}createBounds({sizes:s}){this.sizes=s,this.bounds=this.element.getBoundingClientRect(),this.updateScale(),this.updateX(),this.updateY()}show(){this.transition&&this.transition.animate(this.mesh,(s=>{this.program.uniforms.uAlpha.value=1}))}hide(){}onResize(s){this.createBounds(s),this.updateX(),this.updateY()}updateScale(){this.height=this.bounds.height/window.innerHeight,this.width=this.bounds.width/window.innerWidth,this.mesh.scale.x=this.sizes.width*this.width,this.mesh.scale.y=this.sizes.height*this.height}updateX(){this.x=this.bounds.left/window.innerWidth,this.mesh.position.x=-this.sizes.width/2+this.mesh.scale.x/2+this.x*this.sizes.width}updateY(){this.y=this.bounds.top/window.innerHeight,this.mesh.position.y=this.sizes.height/2-this.mesh.scale.y/2-this.y*this.sizes.height}update(){this.bounds&&(this.updateX(),this.updateY())}destroy(){}}}},(function(s){s.h=()=>"e056dfdf3c1a5d29a7cf"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,