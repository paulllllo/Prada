/*! For license information please see main.7b63053fb76f9943c0f8.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateprada("main",{"./styles/index.scss":(t,s,e)=>{e.r(s);var i=e("./node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js")(t.id,{publicPath:"",locals:!1});t.hot.dispose(i),t.hot.accept(void 0,i)},"./app/components/Canvas/Collections/index.js":(t,s,e)=>{e.r(s),e.d(s,{default:()=>a});var i=e("./node_modules/ogl/src/core/Transform.js"),l=e("./node_modules/ogl/src/extras/Plane.js"),r=e("./app/components/Canvas/Collections/Media.js"),o=e("./node_modules/lodash/lodash.js"),n=e("./node_modules/gsap/index.js"),c=e("./node_modules/prefix/index.js");class a{constructor({gl:t,scene:s,sizes:e,transition:l}){this.id="collections",this.gl=t,this.scene=s,this.sizes=e,this.transition=l,this.group=new i.Transform,this.transformPrefix=c("transform"),this.mediaElements=document.querySelectorAll(".collections_gallery_media"),this.collectionArticles=document.querySelectorAll(".collections_article"),this.galleryElement=document.querySelector(".collections_gallery"),this.galleryWrapperElement=document.querySelector(".collections_gallery_wrapper"),this.titlesElement=document.querySelector(".collections_titles"),this.activeFocusClass="collections_article--active",this.scroll={current:0,target:0,start:0,velocity:.5,lerp:.1},this.createGeometry(),this.createGallery(),this.group.setParent(this.scene),this.show()}createGeometry(){this.geometry=new l.Plane(this.gl)}createGallery(){this.medias=(0,o.map)(this.mediaElements,((t,s)=>new r.default({element:t,geometry:this.geometry,gl:this.gl,scene:this.group,sizes:this.sizes,index:s})))}show(){(0,o.map)(this.medias,(t=>{t.show()})),this.transition&&this.transition.animate(this.medias[0].mesh,(t=>{}))}hide(){(0,o.map)(this.medias,(t=>{t.hide()}))}onResize(t){this.scroll.current=0,this.bounds=this.galleryWrapperElement.getBoundingClientRect(),this.sizes=t.sizes,this.width=this.bounds.width/window.innerWidth*this.sizes.width,this.scroll.start=this.scroll.target=0,(0,o.map)(this.medias,(s=>s.onResize(t,this.scroll.current))),this.scroll.limit=this.bounds.width-this.medias[0].element.clientWidth}onTouchDown({x:t,y:s}){this.scroll.start=this.scroll.current}onTouchMove({x:t,y:s}){const e=t.start-t.end;this.scroll.target=this.scroll.start-e}onTouchUp({x:t,y:s}){}onWheel({pixelY:t}){this.scroll.target+=t}onChangeFocus(t){this.index=t;const s=parseInt(this.mediaElements[this.index].getAttribute("data-index"));(0,o.map)(this.collectionArticles,((t,e)=>{e===s?t.classList.add(this.activeFocusClass):t.classList.remove(this.activeFocusClass)})),this.titlesElement.style[this.transformPrefix]=`translateY(${70*s}%) translate(-50%, -50%) rotate(-90deg)`}update(){if(!this.bounds)return;this.scroll.target=n.default.utils.clamp(-this.scroll.limit,0,this.scroll.target),this.scroll.current=n.default.utils.interpolate(this.scroll.current,this.scroll.target,this.scroll.lerp),this.galleryElement.style[this.transformPrefix]=`translateX(${this.scroll.current}px)`,this.scroll.start<this.scroll.current?this.direction="right":this.scroll.start>this.scroll.current&&(this.direction="left"),this.scroll.start=this.scroll.current;const t=Math.floor(Math.abs(this.scroll.current/this.scroll.limit)*this.medias.length);this.index!==t&&this.onChangeFocus(t),(0,o.map)(this.medias,((t,s)=>{t.update(this.scroll.current,this.index)}))}destroy(){this.scene.removeChild(this.group)}}}},(function(t){t.h=()=>"c8620189fe1e44ecec44"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,