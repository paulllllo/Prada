/*! For license information please see main.273e9b839e5c7e7e6d17.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateprada("main",{"./styles/index.scss":(e,t,s)=>{s.r(t);var i=s("./node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js")(e.id,{publicPath:"",locals:!1});e.hot.dispose(i),e.hot.accept(void 0,i)},"./app/components/Canvas/index.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>d});var i=s("./node_modules/ogl/src/core/Renderer.js"),o=s("./node_modules/ogl/src/core/Camera.js"),h=s("./node_modules/ogl/src/core/Transform.js"),n=s("./app/components/Canvas/Home/index.js"),l=s("./app/components/Canvas/About/index.js"),a=s("./app/components/Canvas/Collections/index.js"),c=s("./app/components/Canvas/transition.js"),r=s("./app/components/Canvas/Detail/index.js");class d{constructor({template:e}){this.template=e,this.createRenderer(),this.createCamera(),this.createScene(),this.onResize(),this.x={start:0,distance:0,end:0},this.y={start:0,distance:0,end:0}}createRenderer(){this.renderer=new i.Renderer({alpha:!0,antiAliasing:!0}),this.gl=this.renderer.gl,document.body.appendChild(this.gl.canvas)}createCamera(){this.camera=new o.Camera(this.gl),this.camera.position.z=5}createScene(){this.scene=new h.Transform}createHome(){this.home=new n.default({gl:this.gl,scene:this.scene,sizes:this.sizes})}destroyHome(){this.home&&(this.home.destroy(),this.home=null,console.log("destroy home!"))}createAbout(){this.about=new l.default({gl:this.gl,scene:this.scene,sizes:this.sizes})}destroyAbout(){this.about&&(this.about.destroy(),this.about=null,console.log("destroy about!"))}createCollections(){this.collections=new a.default({gl:this.gl,scene:this.scene,sizes:this.sizes})}destroyCollections(){this.collections&&(this.collections.destroy(),this.collections=null)}createDetail(){this.detail=new r.default({gl:this.gl,scene:this.scene,sizes:this.sizes,transition:this.transition})}destroyDetail(){this.detail&&(this.detail.destroy(),this.detail=null)}onPreloaded(){this.onPageChangeEnd(this.template)}onPageChangeStart(e,t){this.collections&&this.collections.hide(),this.about&&this.about.hide(),this.home&&this.home.hide(),this.detail&&this.detail.hide(),this.fromCollectionsToDetail="collections"===this.template&&t.indexOf("detail")>-1,this.fromDetailToCollections="detail"===this.template&&t.indexOf("collections")>-1,(this.fromCollectionsToDetail||this.fromDetailToCollections)&&(this.transition=new c.default({collections:this.collections,url:t,gl:this.gl,scene:this.scene,sizes:this.sizes}),this.transition.setElement(this.collections||this.detail))}onPageChangeEnd(e){"collections"===e?this.createCollections():this.collections&&this.destroyCollections(),"Detail"===e?this.createDetail():this.detail&&this.destroyDetail(),"about"===e?this.createAbout():this.about&&this.destroyAbout(),"home"===e?this.createHome():this.home&&this.destroyHome()}onResize(){this.renderer.setSize(window.innerWidth,window.innerHeight),this.camera.perspective({aspect:window.innerWidth/window.innerHeight});const e=this.camera.fov*(Math.PI/180),t=2*Math.tan(e/2)*this.camera.position.z,s=t*this.camera.aspect;this.sizes={height:t,width:s};const i={sizes:this.sizes};this.collections&&this.collections.onResize(i),this.detail&&this.detail.onResize(i),this.about&&this.about.onResize(i),this.home&&this.home.onResize(i)}onTouchDown(e){this.isDown=!0,this.x.start=e.touches?e.touches[0].clientX:e.clientX,this.y.start=e.touches?e.touches[0].clientY:e.clientY;const t={x:this.x,y:this.y};this.collections&&this.collections.onTouchDown&&this.collections.onTouchDown(t),this.detail&&this.detail.onTouchDown&&this.detail.onTouchDown(t),this.about&&this.about.onTouchDown&&this.about.onTouchDown(t),this.home&&this.home.onTouchDown&&this.home.onTouchDown(t)}onTouchMove(e){if(!this.isDown)return;const t=e.touches?e.touches[0].clientX:e.clientX,s=e.touches?e.touches[0].clientY:e.clientY;this.x.end=t,this.y.end=s;const i={x:this.x,y:this.y};this.collections&&this.collections.onTouchMove&&this.collections.onTouchMove(i),this.detail&&this.detail.onTouchMove&&this.detail.onTouchMove(i),this.about&&this.about.onTouchMove&&this.about.onTouchMove(i),this.home&&this.home.onTouchMove&&this.home.onTouchMove(i)}onTouchUp(e){this.isDown=!1;const t=e.touches?e.touches[0].clientX:e.clientX,s=e.touches?e.touches[0].clientY:e.clientY;this.x.end=t,this.y.end=s;const i={x:this.x,y:this.y};this.collections&&this.collections.onTouchUp&&this.collections.onTouchUp(i),this.detail&&this.detail.onTouchUp&&this.detail.onTouchUp(i),this.about&&this.about.onTouchUp&&this.about.onTouchUp(i),this.home&&this.home.onTouchUp&&this.home.onTouchUp(i)}onWheel(e){this.collections&&this.collections.onWheel(e),this.home&&this.home.onWheel(e)}update(e){this.collections&&this.collections.update(e),this.detail&&this.detail.update(e),this.about&&this.about.update(e),this.home&&this.home.update(),this.renderer.render({camera:this.camera,scene:this.scene})}}},"./app/components/Canvas/transition.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>c});var i=s("./node_modules/gsap/index.js"),o=s("./node_modules/ogl/src/extras/Plane.js"),h=s("./node_modules/ogl/src/core/Program.js"),n=s("./node_modules/ogl/src/core/Mesh.js"),l=s("./app/shaders/plane-vertex.glsl"),a=s("./app/shaders/plane-fragment.glsl");const c=class{constructor({collections:e,gl:t,scene:s,sizes:i,url:h}){this.collections=e,this.gl=t,this.url=h,this.scene=s,this.sizes=i,this.geometry=new o.Plane(this.gl),this.extra={x:0,y:0}}createProgram(e){this.program=new h.Program(this.gl,{fragment:a.default,vertex:l.default,uniforms:{uAlpha:{value:1},tMap:{value:e}}})}createMesh(e){this.mesh=new n.Mesh(this.gl,{geometry:this.geometry,program:this.program}),this.mesh.scale.x=e.scale.x,this.mesh.scale.y=e.scale.y,this.mesh.scale.z=e.scale.z,this.mesh.position.x=e.position.x,this.mesh.position.y=e.position.y,this.mesh.position.z=.01*e.position.z,this.mesh.setParent(this.scene)}setElement(e){if(console.log("element***",e),"collections"===e.id){const{index:t,medias:s}=e,i=s[t];this.createProgram(i.texture),this.createMesh(i.mesh),this.transition="detail"}else this.createProgram(e.texture),this.createMesh(e),this.transition="collections"}animate(e,t){i.default.timeline({onComplete}).to(this.mesh.scale,{duration:1.5,ease:"expo.inOut"})}}}},(function(e){e.h=()=>"65df758939d5ae1aaec0"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,