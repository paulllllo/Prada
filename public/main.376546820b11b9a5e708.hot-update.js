/*! For license information please see main.376546820b11b9a5e708.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateprada("main",{"./styles/index.scss":(e,s,t)=>{t.r(s);var i=t("./node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js")(e.id,{publicPath:"",locals:!1});e.hot.dispose(i),e.hot.accept(void 0,i)},"./app/components/Canvas/transition.js":(e,s,t)=>{t.r(s),t.d(s,{default:()=>h});var i=t("./node_modules/gsap/index.js"),o=t("./node_modules/ogl/src/extras/Plane.js"),a=t("./node_modules/ogl/src/core/Program.js"),l=t("./node_modules/ogl/src/core/Mesh.js"),n=t("./app/shaders/plane-vertex.glsl"),r=t("./app/shaders/plane-fragment.glsl");const h=class{constructor({collections:e,gl:s,scene:t,sizes:i,url:a}){this.collections=e,this.gl=s,this.url=a,this.scene=t,this.sizes=i,this.geometry=new o.Plane(this.gl),this.extra={x:0,y:0}}createProgram(e){this.program=new a.Program(this.gl,{fragment:r.default,vertex:n.default,uniforms:{uAlpha:{value:1},tMap:{value:e}}})}createMesh(e){this.mesh=new l.Mesh(this.gl,{geometry:this.geometry,program:this.program}),this.mesh.scale.x=e.scale.x,this.mesh.scale.y=e.scale.y,this.mesh.scale.z=e.scale.z,this.mesh.position.x=e.position.x,this.mesh.position.y=e.position.y,this.mesh.position.z=.01*e.position.z,this.mesh.setParent(this.scene)}setElement(e){if(console.log("element***",e),"collections"===e.id){const{index:s,medias:t}=e,i=t[s];this.createProgram(i.texture),this.createMesh(i.mesh),this.transition="detail"}else this.createProgram(e.texture),this.createMesh(e),this.transition="collections"}animate(e,s){const t=i.default.timeline({onComplete:s});t.to(this.mesh.scale,{duration:1.5,ease:"expo.inOut",x:e.scale.x,y:e.scale.y,z:e.scale.z},0),t.to(this.mesh.position,{duration:1.5,ease:"expo.inOut",x:e.position.x,y:e.position.y,z:e.position.z},0),t.call((e=>{this.scene.removeChild(this.mesh)}))}}}},(function(e){e.h=()=>"0876fa6e4ac7959ed620"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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cHJhZGEvLi9hcHAvY29tcG9uZW50cy9DYW52YXMvdHJhbnNpdGlvbi5qcyIsIndlYnBhY2s6Ly9wcmFkYS93ZWJwYWNrL3J1bnRpbWUvZ2V0RnVsbEhhc2giXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTcyMzcxOTE1MTY2OFxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCIuLi9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9obXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJwdWJsaWNQYXRoXCI6XCJcIixcImxvY2Fsc1wiOmZhbHNlfSk7XG4gICAgICBtb2R1bGUuaG90LmRpc3Bvc2UoY3NzUmVsb2FkKTtcbiAgICAgIG1vZHVsZS5ob3QuYWNjZXB0KHVuZGVmaW5lZCwgY3NzUmVsb2FkKTtcbiAgICB9XG4gICIsImltcG9ydCBHU0FQIGZyb20gJ2dzYXAnXG5pbXBvcnQgeyBNZXNoLCBQbGFuZSwgUHJvZ3JhbSB9IGZyb20gJ29nbCdcblxuaW1wb3J0IHZlcnRleCBmcm9tICcuLi8uLi9zaGFkZXJzL3BsYW5lLXZlcnRleC5nbHNsJ1xuaW1wb3J0IGZyYWdtZW50IGZyb20gJy4uLy4uL3NoYWRlcnMvcGxhbmUtZnJhZ21lbnQuZ2xzbCdcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3Mge1xuICAgIGNvbnN0cnVjdG9yICh7IGNvbGxlY3Rpb25zLCBnbCwgc2NlbmUsIHNpemVzLCB1cmwgfSkge1xuICAgICAgICB0aGlzLmNvbGxlY3Rpb25zID0gY29sbGVjdGlvbnNcbiAgICAgICAgdGhpcy5nbCA9IGdsXG4gICAgICAgIHRoaXMudXJsID0gdXJsXG4gICAgICAgIHRoaXMuc2NlbmUgPSBzY2VuZVxuICAgICAgICB0aGlzLnNpemVzID0gc2l6ZXNcblxuICAgICAgICB0aGlzLmdlb21ldHJ5ID0gbmV3IFBsYW5lKHRoaXMuZ2wpXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKCcmJiBHZW8gKionLCB0aGlzLmdlb21ldHJ5KVxuXG4gICAgICAgIHRoaXMuZXh0cmEgPSB7XG4gICAgICAgICAgICB4OiAwLFxuICAgICAgICAgICAgeTogMFxuICAgICAgICB9XG4gICAgfVxuXG4gICAgY3JlYXRlUHJvZ3JhbSAodGV4dHVyZSkge1xuICAgICAgICB0aGlzLnByb2dyYW0gPSBuZXcgUHJvZ3JhbSh0aGlzLmdsLCB7XG4gICAgICAgICAgICBmcmFnbWVudCxcbiAgICAgICAgICAgIHZlcnRleCxcbiAgICAgICAgICAgIHVuaWZvcm1zOiB7XG4gICAgICAgICAgICAgICAgdUFscGhhOiB7IHZhbHVlOiAxIH0sXG4gICAgICAgICAgICAgICAgdE1hcDogeyB2YWx1ZTogdGV4dHVyZSB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgY3JlYXRlTWVzaCAobWVzaCkge1xuICAgICAgICB0aGlzLm1lc2ggPSBuZXcgTWVzaCh0aGlzLmdsLCB7XG4gICAgICAgICAgICBnZW9tZXRyeTogdGhpcy5nZW9tZXRyeSxcbiAgICAgICAgICAgIHByb2dyYW06IHRoaXMucHJvZ3JhbVxuICAgICAgICB9KVxuXG4gICAgICAgIHRoaXMubWVzaC5zY2FsZS54ID0gbWVzaC5zY2FsZS54XG4gICAgICAgIHRoaXMubWVzaC5zY2FsZS55ID0gbWVzaC5zY2FsZS55XG4gICAgICAgIHRoaXMubWVzaC5zY2FsZS56ID0gbWVzaC5zY2FsZS56XG5cbiAgICAgICAgdGhpcy5tZXNoLnBvc2l0aW9uLnggPSBtZXNoLnBvc2l0aW9uLnhcbiAgICAgICAgdGhpcy5tZXNoLnBvc2l0aW9uLnkgPSBtZXNoLnBvc2l0aW9uLnlcbiAgICAgICAgdGhpcy5tZXNoLnBvc2l0aW9uLnogPSBtZXNoLnBvc2l0aW9uLnogKiAwLjAxXG5cbiAgICAgICAgdGhpcy5tZXNoLnNldFBhcmVudCh0aGlzLnNjZW5lKVxuICAgIH1cblxuICAgIHNldEVsZW1lbnQgKGVsZW1lbnQpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ2VsZW1lbnQqKionLCBlbGVtZW50KVxuICAgICAgICBpZiAoZWxlbWVudC5pZCA9PT0gJ2NvbGxlY3Rpb25zJykge1xuICAgICAgICAgICAgY29uc3QgeyBpbmRleCwgbWVkaWFzIH0gPSBlbGVtZW50XG4gICAgICAgICAgICBjb25zdCBtZWRpYSA9IG1lZGlhc1tpbmRleF1cblxuICAgICAgICAgICAgdGhpcy5jcmVhdGVQcm9ncmFtKG1lZGlhLnRleHR1cmUpXG4gICAgICAgICAgICB0aGlzLmNyZWF0ZU1lc2gobWVkaWEubWVzaClcblxuICAgICAgICAgICAgdGhpcy50cmFuc2l0aW9uID0gJ2RldGFpbCdcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuY3JlYXRlUHJvZ3JhbShlbGVtZW50LnRleHR1cmUpXG4gICAgICAgICAgICB0aGlzLmNyZWF0ZU1lc2goZWxlbWVudClcblxuICAgICAgICAgICAgdGhpcy50cmFuc2l0aW9uID0gJ2NvbGxlY3Rpb25zJ1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gICAgICAgICAgQW5pbWF0aW9uXG4gICAgYW5pbWF0ZSAobWVzaCwgb25Db21wbGV0ZSkge1xuICAgICAgICBjb25zdCB0aW1lbGluZSA9IEdTQVAudGltZWxpbmUoe1xuICAgICAgICAgICAgb25Db21wbGV0ZVxuICAgICAgICB9KVxuXG4gICAgICAgIHRpbWVsaW5lLnRvKHRoaXMubWVzaC5zY2FsZSwge1xuICAgICAgICAgICAgZHVyYXRpb246IDEuNSxcbiAgICAgICAgICAgIGVhc2U6ICdleHBvLmluT3V0JyxcbiAgICAgICAgICAgIHg6IG1lc2guc2NhbGUueCxcbiAgICAgICAgICAgIHk6IG1lc2guc2NhbGUueSxcbiAgICAgICAgICAgIHo6IG1lc2guc2NhbGUuelxuICAgICAgICB9LCAwKVxuXG4gICAgICAgIHRpbWVsaW5lLnRvKHRoaXMubWVzaC5wb3NpdGlvbiwge1xuICAgICAgICAgICAgZHVyYXRpb246IDEuNSxcbiAgICAgICAgICAgIGVhc2U6ICdleHBvLmluT3V0JyxcbiAgICAgICAgICAgIHg6IG1lc2gucG9zaXRpb24ueCxcbiAgICAgICAgICAgIHk6IG1lc2gucG9zaXRpb24ueSxcbiAgICAgICAgICAgIHo6IG1lc2gucG9zaXRpb24uelxuICAgICAgICB9LCAwKVxuXG4gICAgICAgIHRpbWVsaW5lLmNhbGwoXyA9PiB7XG4gICAgICAgICAgICB0aGlzLnNjZW5lLnJlbW92ZUNoaWxkKHRoaXMubWVzaClcbiAgICAgICAgfSlcbiAgICB9XG59XG4iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmggPSAoKSA9PiAoXCIwODc2ZmE2ZTRhYzc5NTllZDYyMFwiKSJdLCJuYW1lcyI6WyJjc3NSZWxvYWQiLCJtb2R1bGUiLCJpZCIsImhvdCIsImRpc3Bvc2UiLCJhY2NlcHQiLCJ1bmRlZmluZWQiLCJjb25zdHJ1Y3RvciIsImNvbGxlY3Rpb25zIiwiZ2wiLCJzY2VuZSIsInNpemVzIiwidXJsIiwidGhpcyIsImdlb21ldHJ5IiwiUGxhbmUiLCJleHRyYSIsIngiLCJ5IiwiY3JlYXRlUHJvZ3JhbSIsInRleHR1cmUiLCJwcm9ncmFtIiwiUHJvZ3JhbSIsImZyYWdtZW50IiwidmVydGV4IiwidW5pZm9ybXMiLCJ1QWxwaGEiLCJ2YWx1ZSIsInRNYXAiLCJjcmVhdGVNZXNoIiwibWVzaCIsIk1lc2giLCJzY2FsZSIsInoiLCJwb3NpdGlvbiIsInNldFBhcmVudCIsInNldEVsZW1lbnQiLCJlbGVtZW50IiwiY29uc29sZSIsImxvZyIsImluZGV4IiwibWVkaWFzIiwibWVkaWEiLCJ0cmFuc2l0aW9uIiwiYW5pbWF0ZSIsIm9uQ29tcGxldGUiLCJ0aW1lbGluZSIsIkdTQVAiLCJ0byIsImR1cmF0aW9uIiwiZWFzZSIsImNhbGwiLCJfIiwicmVtb3ZlQ2hpbGQiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiaCJdLCJzb3VyY2VSb290IjoiIn0=